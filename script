// ==UserScript==
// @name        Black List by PeeKay
// @namespace   Violentmonkey Scripts
// @match       *://gamedev.ru/*
// @grant       none
// @version     1.0
// @author      -
// @description 25.05.2023, 08:53:01
// ==/UserScript==

const ignoreList = ['Example1', 'Example2'];

(function () {
    'use strict';

    const divElements = document.querySelectorAll('div.bound.head');

divElements.forEach(divElement => {

  const shouldRemove = ignoreList.some(substring => divElement.innerHTML.includes(substring));
  if (shouldRemove) {
    const siblingsToRemove = []; // Array to collect next siblings

    let nextSibling = divElement.nextElementSibling;
    console.log(nextSibling);
    if(divElements.length>1){
    while (nextSibling && !(nextSibling.classList?.contains('bound') && nextSibling.classList?.contains('head')) && !nextSibling.querySelector('div.pages')) {
  siblingsToRemove.push(nextSibling); // Add next sibling to the array
  nextSibling = nextSibling.nextElementSibling;
}

if ((nextSibling && nextSibling.classList?.contains('bound') && nextSibling.classList?.contains('head')) || (nextSibling && nextSibling.querySelector('div.pages'))) {
  // Remove all collected siblings and the original divElement
  siblingsToRemove.forEach(sibling => sibling.remove());
  divElement.remove();
}}
    else{

      while (nextSibling && !nextSibling.querySelector('div.pages')) {
  siblingsToRemove.push(nextSibling); // Add next sibling to the array
  nextSibling = nextSibling.nextElementSibling;
}

if (nextSibling && nextSibling.querySelector('div.pages')) {
  // Remove all collected siblings and the original divElement
  siblingsToRemove.forEach(sibling => sibling.remove());
  divElement.remove();
}


    }

  }
});

    const divElements1 = document.querySelectorAll('div:not([class])');

    divElements1.forEach(divElement => {
        const spanElements = divElement.querySelectorAll('span.q.small');

        spanElements.forEach(spanElement => {
            const value = spanElement.textContent.trim();
            const shouldRemove = ignoreList.some(substring => value.substring(0, substring.length) === substring);

            if (shouldRemove) {
                divElement.remove();
            }
        });
    });

  const bElements = document.querySelectorAll('b');

bElements.forEach(bElement => {
  ignoreList.forEach(substring => {
    if (bElement.textContent.includes(substring)) {
      const replacedContent = bElement.innerHTML.replace(new RegExp(substring, 'g'), '');
      bElement.innerHTML = replacedContent;
    }
  });
});
})();
