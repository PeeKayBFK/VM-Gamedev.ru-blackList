// ==UserScript==
// @name        Black List by PeeKay v0.3
// @namespace   Violentmonkey Scripts
// @match       *://gamedev.ru/*
// @grant       none
// @version     0.3
// @author      -
// @description 25.05.2023, 08:53:01
// ==/UserScript==



const ignoreList = ['Example1', 'Example2'];
const GOLD ="#cc9d04";
const GREEN = "#245511";
const BLUE = "#1181c2";
const PINK ="#801f42";
const ORANGE ="#db6809";
const PURPLE = "#541482";
const tagList = [
                 { nick: 'PeeKay', tag: 'Создатель скрипта', color: GOLD },
                 { nick: 'wat', tag: 'Создатель сайта', color: PURPLE }
                ];

(function()
{
    'use strict';
    const divElements = document.querySelectorAll('div.bound.head');

    divElements.forEach(divElement =>
    {
         const shouldRemove = ignoreList.some(substring => divElement.innerHTML.includes(substring));
  if (shouldRemove) {
    const siblingsToRemove = []; // Array to collect next siblings

    let nextSibling = divElement.nextElementSibling;
    console.log(nextSibling);
    if(divElements.length>1){
    while (nextSibling && !(nextSibling.classList?.contains('bound') && nextSibling.classList?.contains('head')) && !nextSibling.querySelector('div.pages')) {
  siblingsToRemove.push(nextSibling); // Add next sibling to the array
  nextSibling = nextSibling.nextElementSibling;
}

if ((nextSibling && nextSibling.classList?.contains('bound') && nextSibling.classList?.contains('head')) || (nextSibling && nextSibling.querySelector('div.pages'))) {
  // Remove all collected siblings and the original divElement
  siblingsToRemove.forEach(sibling => sibling.remove());
  divElement.remove();
}}
    else{

      while (nextSibling && !nextSibling.querySelector('div.pages')) {
  siblingsToRemove.push(nextSibling); // Add next sibling to the array
  nextSibling = nextSibling.nextElementSibling;
}

if (nextSibling && nextSibling.querySelector('div.pages')) {
  // Remove all collected siblings and the original divElement
  siblingsToRemove.forEach(sibling => sibling.remove());
  divElement.remove();
}
            }
        }

        var tagCheckResult = CheckTag(divElement, tagList);

        if (tagCheckResult.result == true)
        {
            const spanElement = document.createElement('span');
            spanElement.style.marginLeft = '0.5em';
            spanElement.style.border = '1px solid #335970';
            spanElement.style.borderRadius = '0.3em';
            spanElement.style.padding = '0.1em 0.2em';
            spanElement.style.background = tagCheckResult.color;
            spanElement.style.fontSize = '0.8em';
            spanElement.style.color = '#FFFFFF';
            spanElement.style.opacity = '0.7';
            spanElement.innerHTML = tagCheckResult.tag;

            const ulElement = divElement.querySelector('ul');
            const liElement = ulElement.querySelector('li');
            const aElement = liElement.querySelector('a');
            liElement.insertBefore(spanElement, aElement.nextSibling);
        }
    });

    const divElements1 = document.querySelectorAll('div:not([class])');

    divElements1.forEach(divElement =>
    {
        const spanElements = divElement.querySelectorAll('span.q.small');

        spanElements.forEach(spanElement =>
        {
            const value = spanElement.textContent.trim();
            const shouldRemove = ignoreList.some(substring => value.substring(0, substring.length) === substring);

            if (shouldRemove)
            {
                divElement.remove();
            }
        });
    });

    const bElements = document.querySelectorAll('b');

    bElements.forEach(bElement =>
    {
        ignoreList.forEach(substring =>
        {
            if (bElement.textContent.includes(substring))
            {
                const replacedContent = bElement.innerHTML.replace(new RegExp(substring, 'g'), '');
                bElement.innerHTML = replacedContent;
            }
        });
    });
})();

function CheckTag(divElement, objectArray)
{
    const ulElement = divElement.querySelector('ul');
    const liElement = ulElement.querySelector('li');
    const aElement = liElement.querySelector('a');
    const result = {result: false, tag: '',color: ''};

    for (let i = 0; i < objectArray.length; i++)
    {
        const user = objectArray[i];

        if (aElement.innerHTML.includes(user.nick))
        {
            result.result = true;
            result.tag = user.tag;
            result.color = user.color;
            return result;
        }
    }

    return result;
}
